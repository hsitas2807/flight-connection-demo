{"version":3,"sources":["history.js","main/utils/MyMapComponent.js","main/services/API.js","main/webpage/SearchFlight.js","main/manageFlights/ManageFlights.js","App.js","reportWebVitals.js","index.js"],"names":["history","MyMapComponent","props","console","log","path","arr","MapHoc","withScriptjs","withGoogleMap","defaultZoom","defaultCenter","lat","lng","position","title","fromAirName","style","height","width","length","toAirName","geodesic","strokeColor","strokeOpacity","strokeWeight","googleMapURL","loadingElement","containerElement","mapElement","baseUrl","masterDataServiceUrl","connectionBuilderServiceUrl","connectionBuilderServiceUrlForApplicableFlight","masterDataServiceUrlForAllAirport","useStyles","axios","create","timeout","makeStyles","root","flexGrow","backgroundColor","paddingTop","grids","paddingLeft","input","button","table","minWidth","tableGrid","paddingRight","schema","fromAirport","presence","allowEmpty","message","format","pattern","flags","maximum","minimum","toAirport","CenteredTabs","classes","useState","fromAir","setFromAir","setFromAirName","settoAirName","toAir","settoAir","connectingAir","setconnectingAir","masterData","setMasterData","values","errors","formState","setFormState","applicableFlights","setapplicableFlights","mapCordinates","setMapCordinates","handleSubmit","a","validate","frmState","isValid","post","depAirport","arrAirport","headers","Accept","then","data","connectionData","error","map","row","index","onwardArrArpt","localArr","airportCode","ConvertDMSToDD","parts","coordinates","split","push","cityName","degrees","minutes","seconds","direction","dd","parseFloat","useEffect","get","hasError","field","handleChange","label","event","persist","target","value","Grid","container","spacing","className","item","FormControl","clsx","margin","textField","TextField","variant","id","name","type","onChange","e","helperText","InputProps","InputLabelProps","shrink","required","Button","color","size","onClick","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","rowData","onwardDepArpt","connArrArpt","handleRowClick","scope","onwardFltNo","onwardDepTime","onwardArrTime","connFltNo","connDepArpt","connDepTime","connArrTime","paddingBottom","images","window","innerHeight","about","React","setValue","Tabs","newValue","indicatorColor","centered","Tab","href","fontSize","App","exact","SearchFlight","ManageFlights","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8aAEeA,I,gCCYFC,EAAiB,SAAAC,GAC5BC,QAAQC,IAAIF,EAAMG,MAClB,IAAMC,EAAMJ,EAAMG,KAuDZE,EAASC,uBAAaC,yBA/CR,kBAElB,eAAC,YAAD,CAAWC,YAAa,EAAGC,cAAe,CAAEC,IAAK,UAAWC,IAAK,WAAjE,UAIE,cAAC,SAAD,CACEC,SAAU,CACRF,IAAKV,EAAMG,KAAK,GAAGO,IACnBC,IAAKX,EAAMG,KAAK,GAAGQ,KAErBE,MAAOb,EAAMc,YAEbC,MAAO,CAAEC,OAAQ,OAAQC,MAAO,SAElC,cAAC,SAAD,CACEL,SAAU,CACRF,IAAKV,EAAMG,KAAK,GAAGO,IACnBC,IAAKX,EAAMG,KAAK,GAAGQ,KAGrBI,MAAO,CAAEC,OAAQ,OAAQC,MAAO,SAIjCjB,EAAMG,MAAQH,EAAMG,KAAKe,OAAS,EACjC,cAAC,SAAD,CACEN,SAAU,CACRF,IAAKV,EAAMG,KAAK,GAAGO,IACnBC,IAAKX,EAAMG,KAAK,GAAGQ,KAErBE,MAAOb,EAAMmB,UAEbJ,MAAO,CAAEC,OAAQ,OAAQC,MAAO,SAC7B,GAEP,cAAC,WAAD,CACEd,KAAMC,GAAOA,EAAIc,OAAS,EAAId,EAAM,GACpCgB,UAAU,EACVC,YAAY,UACZC,cAAe,EACfC,aAAc,WAQpB,OACE,cAAClB,EAAD,CACEmB,aAAa,wHACbC,eAAgB,qBAAKV,MAAO,CAAEC,OAAO,UACrCU,iBAAkB,qBAAKX,MAAO,CAAEC,OAAO,WACvCW,WAAY,qBAAKZ,MAAO,CAAEC,OAAO,aC5E1BY,EAAU,yBACVC,EAAoB,UAAMD,EAAN,wBACpBE,EAA2B,UAAMF,EAAN,+BAC3BG,EAA8C,UAAMD,EAAN,yBAC9CE,EAAiC,UAAMH,EAAN,gBCoBxCI,GAHSC,IAAMC,OAAO,CAC1BC,QAAS,MAEOC,YAAW,CAC3BC,KAAM,CACJC,SAAU,EACVC,gBAAiB,UACjBC,WAAY,QAGdC,MAAO,CACLD,WAAY,OACZE,YAAa,MAEfC,MAAO,CACL5B,OAAQ,IAEV6B,OAAQ,CACNL,gBAAiB,UACjBxB,OAAQ,IAEV8B,MAAO,CACLC,SAAU,KAEZC,UAAW,CACTL,YAAa,KACbM,aAAc,KACdR,WAAY,SAIVS,EAAS,CACbC,YAAa,CACXC,SAAU,CACRC,YAAY,EACZC,QAAS,eAEXC,OAAQ,CACNC,QAAS,cACTC,MAAO,IACPH,QAAS,+BAEXpC,OAAQ,CACNwC,QAAS,EACTC,QAAS,IAGbC,UAAW,CACTR,SAAU,CACRC,YAAY,EACZC,QAAS,eAEXC,OAAQ,CACNC,QAAS,cACTC,MAAO,IACPH,QAAS,+BAEXpC,OAAQ,CACNwC,QAAS,EACTC,QAAS,KA8TAE,EAzTM,WACnB,IAAMC,EAAU7B,IAQhB,EAA8B8B,qBAA9B,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAsCF,qBAAtC,mBAAOjD,EAAP,KAAoBoD,EAApB,KACA,EAAkCH,qBAAlC,mBAAO5C,EAAP,KAAkBgD,EAAlB,KACA,EAA0BJ,qBAA1B,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAA0CN,qBAA1C,mBAAOO,EAAP,KAAsBC,EAAtB,KACA,EAAoCR,mBAAS,IAA7C,mBAAOS,EAAP,KAAmBC,EAAnB,KACA,EAAkCV,mBAbb,CACnBW,OAAQ,CACNvB,YAAa,GACbS,UAAW,IAEbe,OAAQ,KAQV,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAkDd,mBAAS,IAA3D,qBAAOe,GAAP,MAA0BC,GAA1B,MACA,GAA0ChB,mBAAS,IAAnD,qBAAOiB,GAAP,MAAsBC,GAAtB,MAEMC,GAAY,uCAAG,8BAAAC,EAAA,yDAEnBP,EAAUF,OAAOvB,YAAca,EAC/BY,EAAUF,OAAOd,UAAYQ,EACvBO,EAASS,IAASR,EAAUF,OAAQxB,GAC1C2B,GAAa,SAACQ,GAAD,mBAAC,eACTA,GADQ,IAEXC,SAAUX,EACVA,OAAQA,GAAU,SAGhBA,EAXe,0EAcKzC,IAAMqD,KAAKxD,EAAgD,CAC/EyD,WAAYxB,EACZyB,WAAYrB,GACX,CACDsB,QAAS,CACP,8BAA+B,IAC/B,eAAgB,kCAChBC,OAAQ,sBAETC,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcd,GAAqBc,EAAKC,mBAvB/B,gEA2BjB7F,QAAQ8F,MAAM,KAAIzC,SA3BD,QA+BnBwB,GAAkBkB,KAAI,SAACC,EAAKC,GAC1BjG,QAAQC,IAAI+F,EAAIE,eAChB5B,EAAiB0B,EAAIE,kBAIjBC,EAAW,GACjB5B,EAAWwB,KAAI,SAACC,EAAKC,GAEnB,GAAIlC,IAAYiC,EAAII,YAAa,CAE/B,IAIMjG,EAAM,CAAEM,IAFC4F,IAFXC,EADSN,EAAIO,YACMC,MAAM,aAEO,GAAIF,EAAM,GAAIA,EAAM,GAAIA,EAAM,IAErC5F,IADd2F,GAAeC,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAIA,EAAM,KAElEH,EAASM,KAAKtG,GAEd8D,EAAe+B,EAAIU,UAErB,GAAIrC,IAAkB2B,EAAII,YAAa,CAGrC,IAIMjG,EAAM,CAAEM,IAFC4F,IAFXC,EADSN,EAAIO,YACMC,MAAM,aAEO,GAAIF,EAAM,GAAIA,EAAM,GAAIA,EAAM,IAErC5F,IADd2F,GAAeC,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAIA,EAAM,KAElEH,EAASM,KAAKtG,GAIhB,GAAIgE,IAAU6B,EAAII,YAAa,CAI7B,IAAIE,EAIEnG,EAAM,CAAEM,IAFC4F,IAFXC,EAHSN,EAAIO,YAGMC,MAAM,aAEO,GAAIF,EAAM,GAAIA,EAAM,GAAIA,EAAM,IAErC5F,IADd2F,GAAeC,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAIA,EAAM,KAElEH,EAASM,KAAKtG,GACd+D,EAAa8B,EAAIU,cAKrB1B,GAAiBmB,GA9EE,0DAAH,qDAmFlB,SAASE,GAAeM,EAASC,EAASC,EAASC,GACjD,IAAIC,EAAKJ,EAAUC,EAAU,GAAKC,EAAO,KAKzC,OAJAE,EAAKC,WAAWD,GACC,KAAbD,GAAiC,KAAbA,IACtBC,IAAW,GAENA,EAAK,GAEdE,oBAAS,sBAAC,sBAAA/B,EAAA,sEACuBjD,IAAMiF,IAAInF,EAAmC,CAC1E0D,QAAS,CACP,8BAA+B,IAC/B,eAAgB,kCAChBC,OAAQ,sBAETC,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcpB,EAAcoB,MAP5B,cASR5F,QAAQC,IAAIsE,GATJ,2CAWP,IAEH,IAAM4C,GAAW,SAACC,GAAD,QAAazC,EAAUD,OAAO0C,IAEzCC,GAAe,SAACC,EAAOC,GAC3BA,EAAMC,UACNxH,QAAQC,IAAIqH,EAAOC,EAAME,OAAOC,OACnB,eAATJ,GACFtD,EAAWuD,EAAME,OAAOC,OAEb,aAATJ,GACFlD,EAASmD,EAAME,OAAOC,QAgE1B,OACE,gCAEE,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACd,UAAU,MAAMe,QAAQ,IAAIC,UAAWjE,EAAQpB,MAA/D,UACE,cAACkF,EAAA,EAAD,CAAMI,MAAI,EAAV,SACE,cAACC,EAAA,EAAD,CAAaF,UAAWG,YAAKpE,EAAQqE,OAAQrE,EAAQsE,WAArD,SACE,cAACC,EAAA,EAAD,CACEC,QAAQ,WACRC,GAAG,iBACHhB,MAAM,eACNiB,KAAK,cAELC,KAAK,OACLC,SAAU,SAACC,GAAD,OAAOrB,GAAa,cAAeqB,IAC7C5C,MAAOqB,GAAS,eAChBwB,WACExB,GAAS,eAAiBxC,EAAUD,OAAOxB,YAAY,GAAK,KAE9D0F,WAAY,CACVd,UAAWjE,EAAQlB,OAErBkG,gBAAiB,CACfC,QAAQ,GAEVC,UAAQ,QAKd,cAACpB,EAAA,EAAD,CAAMI,MAAI,EAAV,SACE,cAACC,EAAA,EAAD,CAAaF,UAAWG,YAAKpE,EAAQqE,OAAQrE,EAAQsE,WAArD,SACE,cAACC,EAAA,EAAD,CACEC,QAAQ,WACRC,GAAG,iBACHhB,MAAM,aACNiB,KAAK,YACLC,KAAK,OACLC,SAAU,SAACC,GAAD,OAAOrB,GAAa,YAAaqB,IAC3C5C,MAAOqB,GAAS,aAChBwB,WACExB,GAAS,aAAexC,EAAUD,OAAOf,UAAU,GAAK,KAE1DiF,WAAY,CACVd,UAAWjE,EAAQlB,OAErBkG,gBAAiB,CACfC,QAAQ,GAEVC,UAAQ,QAMd,cAACpB,EAAA,EAAD,CAAMI,MAAI,EAAV,SACE,cAACiB,EAAA,EAAD,CACEX,QAAQ,YACRY,MAAM,UACNnB,UAAWjE,EAAQjB,OACnBsG,KAAK,QACLC,QAASlE,GALX,yBAYJ,cAAC0C,EAAA,EAAD,CAAMI,MAAI,EAACD,UAAWjE,EAAQd,UAA9B,SACG8B,IAAqBA,GAAkB5D,OAAS,GAC/C,cAACmI,EAAA,EAAD,CAAgBC,UAAWC,IAA3B,SACE,eAACC,EAAA,EAAD,CAAOzB,UAAWjE,EAAQhB,MAAO2G,aAAW,eAA5C,UACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UAAW,qDACX,cAACA,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAAyB,mDACzB,cAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAAyB,uDACzB,cAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAAyB,gDACzB,cAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAAyB,gDACzB,cAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAAyB,yDACzB,cAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAAyB,mDACzB,cAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAAyB,uDACzB,cAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAAyB,gDACzB,cAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAAyB,qDAI7B,cAACC,EAAA,EAAD,UACGhF,GAAkBkB,KAAI,SAACC,EAAKC,GAAN,OACrB,eAACyD,EAAA,EAAD,CAAsBP,QAAS,kBApJxB,SAACW,GAEtB,IAAM3D,EAAW,GACjB5B,EAAWwB,KAAI,SAACC,EAAKC,GAGnB,GAAI6D,EAAQC,gBAAkB/D,EAAII,aAE5BrC,IAAYiC,EAAII,YAAa,CAG/B,IAIMjG,EAAM,CAAEM,IAFC4F,IAFXC,EADSN,EAAIO,YACMC,MAAM,aAEO,GAAIF,EAAM,GAAIA,EAAM,GAAIA,EAAM,IAErC5F,IADd2F,GAAeC,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAIA,EAAM,KAElEH,EAASM,KAAKtG,GAEd8D,EAAe+B,EAAIU,UAGvB,GAAIoD,EAAQ5D,gBAAkBF,EAAII,YAAa,CAM7C,IAIMjG,EAAM,CAAEM,IAFC4F,IAFXC,EAFSN,EAAIO,YAEMC,MAAM,aAEO,GAAIF,EAAM,GAAIA,EAAM,GAAIA,EAAM,IAErC5F,IADd2F,GAAeC,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAIA,EAAM,KAElEH,EAASM,KAAKtG,GACd+D,EAAa8B,EAAIU,UAInB,GAAIoD,EAAQE,cAAgBhE,EAAII,aAE1BjC,IAAU6B,EAAII,YAAa,CAI7B,IAAIE,EAIEnG,EAAM,CAAEM,IAFC4F,IAFXC,EAFSN,EAAIO,YAEMC,MAAM,aAEO,GAAIF,EAAM,GAAIA,EAAM,GAAIA,EAAM,IAErC5F,IADd2F,GAAeC,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAIA,EAAM,KAElEH,EAASM,KAAKtG,GACd+D,EAAa8B,EAAIU,cAOvB1B,GAAiBmB,GA4FkC8D,CAAejE,IAApD,UACE,cAAC2D,EAAA,EAAD,CAAWN,UAAU,KAAKa,MAAM,MAAhC,SACGlE,EAAImE,cAEP,cAACR,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0B5D,EAAI+D,gBAC9B,cAACJ,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0B5D,EAAIE,gBAC9B,cAACyD,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0B5D,EAAIoE,gBAC9B,cAACT,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0B5D,EAAIqE,gBAC9B,cAACV,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0B5D,EAAIsE,YAC9B,cAACX,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0B5D,EAAIuE,cAC9B,cAACZ,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0B5D,EAAIgE,cAC9B,cAACL,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0B5D,EAAIwE,cAC9B,cAACb,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0B5D,EAAIyE,gBAZjBxE,eAoBzBpB,IAAqBA,GAAkB5D,OAAS,GAChD,eAAC0G,EAAA,EAAD,CAAMI,MAAI,EAACD,UAAWjE,EAAQd,UAA9B,UACE,6CACA,cAAC,EAAD,CAAgB7C,KAAM6E,GAAelE,YAAaA,EAAaK,UAAWA,W,kBCpY9Ec,EAAYI,YAAW,CAC3BC,KAAM,CACJC,SAAU,EACVC,gBAAiB,UACjBC,WAAY,OACZkI,cAAe,QAGjBC,OAAQ,CACN3J,MAAO,OACPD,OAAQ6J,OAAOC,aAGjBC,MAAO,CACL9J,MAAO,OACPD,OAAQ,WAmCG6C,EA/BM,WACnB,IAAMC,EAAU7B,IAChB,EAA0B+I,IAAMjH,SAAS,GAAzC,mBAAO4D,EAAP,KAAcsD,EAAd,KAMA,OACE,8BACE,cAAC1B,EAAA,EAAD,CAAOxB,UAAWjE,EAAQxB,KAA1B,SACE,cAAC4I,EAAA,EAAD,CACEvD,MAAOA,EACPe,SATa,SAAClB,EAAO2D,GAC3BF,EAASE,IASHC,eAAe,UAEfC,UAAQ,EALV,SASE,cAACC,EAAA,EAAD,CACE/D,MAAM,iBACNgE,KAAK,IACLxK,MAAO,CAAEmI,MAAO,QAASsC,SAAU,iBC5BhCC,MAbf,WACE,OACE,qBAAK1D,UAAU,MAAf,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO2D,OAAK,EAACvL,KAAK,IAAImJ,UAAWqC,IACjC,cAAC,IAAD,CAAOD,OAAK,EAACvL,KAAK,iBAAiBmJ,UAAWsC,YCDzCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBnG,MAAK,YAAkD,IAA/CoG,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5408704a.chunk.js","sourcesContent":["import * as history from 'history';\n\nexport default history.createBrowserHistory();\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker,\n  google,\n  Polyline\n} from \"react-google-maps\";\n\n\n\n\nexport const MyMapComponent = props => {\n  console.log(props.path);\n  const arr = props.path;\n\n  const pathCoordinates = [\n    { lat: 36.052, lng: -112.083 },\n    { lat: 36.216, lng: -112.056 }\n  ];\n\n\n  const InternalMap = () => (\n\n    <GoogleMap defaultZoom={3} defaultCenter={{ lat: 25.276987, lng: 55.296249 }}>\n\n\n\n      <Marker\n        position={{\n          lat: props.path[0].lat,\n          lng: props.path[0].lng\n        }}\n        title={props.fromAirName}\n\n        style={{ height: '2xpx', width: '2px' }}\n      />\n      <Marker\n        position={{\n          lat: props.path[1].lat,\n          lng: props.path[1].lng\n        }}\n\n        style={{ height: '1xpx', width: '1px' }}\n      />\n\n\n      {props.path && props.path.length > 2 ?\n        <Marker\n          position={{\n            lat: props.path[2].lat,\n            lng: props.path[2].lng\n          }}\n          title={props.toAirName}\n\n          style={{ height: '2xpx', width: '2px' }}\n        /> : \"\"}\n\n      <Polyline\n        path={arr && arr.length > 0 ? arr : \"\"}\n        geodesic={true}\n        strokeColor='#00ffff'\n        strokeOpacity={1.0}\n        strokeWeight={2}\n      />\n    </GoogleMap>\n  );\n\n\n  const MapHoc = withScriptjs(withGoogleMap(InternalMap));\n\n  return (\n    <MapHoc\n      googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyBPGygadrhurg8G4jOQFo4PCcKk0Q6iqyk&libraries=geometry,drawing,places\"\n      loadingElement={<div style={{ height: `100%` }} />}\n      containerElement={<div style={{ height: `400px` }} />}\n      mapElement={<div style={{ height: `100%` }} />}\n    />)\n\n};\n\n// ReactDOM.render(\n//   <MyMapComponent />,\n//   document.getElementById(\"root\")\n// );","import axios from 'axios';\n\nexport const baseUrl = 'http://localhost:8089/';\nexport const masterDataServiceUrl = `${baseUrl}master-data-service/`;\nexport const connectionBuilderServiceUrl = `${baseUrl}connection-builder-service/`;\nexport const connectionBuilderServiceUrlForApplicableFlight = `${connectionBuilderServiceUrl}api/flightconnections`;\nexport const masterDataServiceUrlForAllAirport = `${masterDataServiceUrl}api/airports`;\n\n","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport axios from 'axios';\nimport clsx from 'clsx';\nimport FormControl from '@material-ui/core/FormControl';\nimport history from '../../history';\nimport validate from 'validate.js';\nimport { MyMapComponent } from \"../utils/MyMapComponent\";\nimport { baseUrl, masterDataServiceUrl, connectionBuilderServiceUrl, connectionBuilderServiceUrlForApplicableFlight, masterDataServiceUrlForAllAirport } from '../services/API';\n\n\nlet instance = axios.create({\n  timeout: 10000,\n});\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n    backgroundColor: '#1261A0',\n    paddingTop: '10px',\n    // paddingBottom: '10px',\n  },\n  grids: {\n    paddingTop: '20px',\n    paddingLeft: '5%'\n  },\n  input: {\n    height: 40\n  },\n  button: {\n    backgroundColor: '#1261A0',\n    height: 40\n  },\n  table: {\n    minWidth: 650,\n  },\n  tableGrid: {\n    paddingLeft: '5%',\n    paddingRight: '5%',\n    paddingTop: '2%'\n  }\n});\n\nconst schema = {\n  fromAirport: {\n    presence: {\n      allowEmpty: false,\n      message: 'is required',\n    },\n    format: {\n      pattern: '[a-z][A-Z]*',\n      flags: 'i',\n      message: 'only characters are allowed',\n    },\n    length: {\n      maximum: 3,\n      minimum: 3\n    },\n  },\n  toAirport: {\n    presence: {\n      allowEmpty: false,\n      message: 'is required',\n    },\n    format: {\n      pattern: '[a-z][A-Z]*',\n      flags: 'i',\n      message: 'only characters are allowed',\n    },\n    length: {\n      maximum: 3,\n      minimum: 3\n    },\n  }\n}\n\nconst CenteredTabs = () => {\n  const classes = useStyles();\n  const InitialState = {\n    values: {\n      fromAirport: '',\n      toAirport: '',\n    },\n    errors: {},\n  };\n  const [fromAir, setFromAir] = useState();\n  const [fromAirName, setFromAirName] = useState();\n  const [toAirName, settoAirName] = useState();\n  const [toAir, settoAir] = useState();\n  const [connectingAir, setconnectingAir] = useState();\n  const [masterData, setMasterData] = useState([]);\n  const [formState, setFormState] = useState(InitialState);\n  const [applicableFlights, setapplicableFlights] = useState([]);\n  const [mapCordinates, setMapCordinates] = useState([]);\n\n  const handleSubmit = async () => {\n\n    formState.values.fromAirport = fromAir;\n    formState.values.toAirport = toAir;\n    const errors = validate(formState.values, schema);\n    setFormState((frmState) => ({\n      ...frmState,\n      isValid: !errors,\n      errors: errors || {},\n    }));\n\n    if (errors) return;\n\n    try {\n      var userData1 = await axios.post(connectionBuilderServiceUrlForApplicableFlight, {\n        depAirport: fromAir,\n        arrAirport: toAir\n      }, {\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-type\": \"application/json; charset=UTF-8\",\n          Accept: \"application/json\"\n        }\n      }).then(({ data }) => setapplicableFlights(data.connectionData));\n\n    }\n    catch (err) {\n      console.error(err.message);\n    }\n\n\n    applicableFlights.map((row, index) => {\n      console.log(row.onwardArrArpt)\n      setconnectingAir(row.onwardArrArpt)\n\n    });\n\n    const localArr = [];\n    masterData.map((row, index) => {\n      var cordinates;\n      if (fromAir === row.airportCode) {\n        cordinates = row.coordinates;\n        var parts = cordinates.split(/[^\\d\\w]+/);\n\n        var latValue = ConvertDMSToDD(parts[0], parts[1], parts[2], parts[3]);\n        var lngValue = ConvertDMSToDD(parts[4], parts[5], parts[6], parts[7]);\n        const arr = { lat: latValue, lng: lngValue };\n        localArr.push(arr);\n\n        setFromAirName(row.cityName);\n      }\n      if (connectingAir === row.airportCode) {\n\n        cordinates = row.coordinates;\n        var parts = cordinates.split(/[^\\d\\w]+/);\n\n        var latValue = ConvertDMSToDD(parts[0], parts[1], parts[2], parts[3]);\n        var lngValue = ConvertDMSToDD(parts[4], parts[5], parts[6], parts[7]);\n        const arr = { lat: latValue, lng: lngValue };\n        localArr.push(arr);\n\n      }\n\n      if (toAir === row.airportCode) {\n        cordinates = row.coordinates;\n\n\n        var parts = cordinates.split(/[^\\d\\w]+/);\n\n        var latValue = ConvertDMSToDD(parts[0], parts[1], parts[2], parts[3]);\n        var lngValue = ConvertDMSToDD(parts[4], parts[5], parts[6], parts[7]);\n        const arr = { lat: latValue, lng: lngValue };\n        localArr.push(arr);\n        settoAirName(row.cityName);\n      }\n\n    }\n    );\n    setMapCordinates(localArr);\n\n\n  };\n\n  function ConvertDMSToDD(degrees, minutes, seconds, direction) {\n    var dd = degrees + minutes / 60 + seconds / (60 * 60);\n    dd = parseFloat(dd);\n    if (direction == \"S\" || direction == \"W\") {\n      dd = dd * -1;\n    }\n    return dd / 10;\n  };\n  useEffect(async () => {\n    var masterDataResponse = await axios.get(masterDataServiceUrlForAllAirport, {\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Content-type\": \"application/json; charset=UTF-8\",\n        Accept: \"application/json\"\n      }\n    }).then(({ data }) => setMasterData(data));\n\n    console.log(masterData);\n\n  }, []);\n\n  const hasError = (field) => !!formState.errors[field];\n\n  const handleChange = (label, event) => {\n    event.persist();\n    console.log(label, event.target.value)\n    if (label == 'FromAirport') {\n      setFromAir(event.target.value);\n    }\n    if (label == 'ToAirport') {\n      settoAir(event.target.value);\n    }\n  };\n\n  const handleRowClick = (rowData) => {\n\n    const localArr = [];\n    masterData.map((row, index) => {\n\n      var cordinates;\n      if (rowData.onwardDepArpt === row.airportCode) {\n\n        if (fromAir === row.airportCode) {\n\n          cordinates = row.coordinates;\n          var parts = cordinates.split(/[^\\d\\w]+/);\n\n          var latValue = ConvertDMSToDD(parts[0], parts[1], parts[2], parts[3]);\n          var lngValue = ConvertDMSToDD(parts[4], parts[5], parts[6], parts[7]);\n          const arr = { lat: latValue, lng: lngValue };\n          localArr.push(arr);\n\n          setFromAirName(row.cityName);\n        }\n      }\n      if (rowData.onwardArrArpt === row.airportCode) {\n\n\n\n        cordinates = row.coordinates;\n\n        var parts = cordinates.split(/[^\\d\\w]+/);\n\n        var latValue = ConvertDMSToDD(parts[0], parts[1], parts[2], parts[3]);\n        var lngValue = ConvertDMSToDD(parts[4], parts[5], parts[6], parts[7]);\n        const arr = { lat: latValue, lng: lngValue };\n        localArr.push(arr);\n        settoAirName(row.cityName);\n\n\n      }\n      if (rowData.connArrArpt === row.airportCode) {\n\n        if (toAir === row.airportCode) {\n\n          cordinates = row.coordinates;\n\n          var parts = cordinates.split(/[^\\d\\w]+/);\n\n          var latValue = ConvertDMSToDD(parts[0], parts[1], parts[2], parts[3]);\n          var lngValue = ConvertDMSToDD(parts[4], parts[5], parts[6], parts[7]);\n          const arr = { lat: latValue, lng: lngValue };\n          localArr.push(arr);\n          settoAirName(row.cityName);\n\n        }\n      }\n\n    }\n    );\n    setMapCordinates(localArr);\n  };\n\n\n  return (\n    <div>\n\n      <Grid container direction=\"row\" spacing=\"5\" className={classes.grids} >\n        <Grid item>\n          <FormControl className={clsx(classes.margin, classes.textField)}>\n            <TextField\n              variant=\"outlined\"\n              id=\"outlined-basic\"\n              label=\"From Airport\"\n              name=\"fromAirport\"\n              //value={formState.values.fromAirport || ''}\n              type=\"text\"\n              onChange={(e) => handleChange('FromAirport', e)}\n              error={hasError('fromAirport')}\n              helperText={\n                hasError('fromAirport') ? formState.errors.fromAirport[0] : null\n              }\n              InputProps={{\n                className: classes.input\n              }}\n              InputLabelProps={{\n                shrink: true\n              }}\n              required\n            // helperText=\"helper text\"\n            />\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <FormControl className={clsx(classes.margin, classes.textField)}>\n            <TextField\n              variant=\"outlined\"\n              id=\"outlined-basic\"\n              label=\"To Airport\"\n              name=\"toAirport\"\n              type=\"text\"\n              onChange={(e) => handleChange('ToAirport', e)}\n              error={hasError('toAirport')}\n              helperText={\n                hasError('toAirport') ? formState.errors.toAirport[0] : null\n              }\n              InputProps={{\n                className: classes.input\n              }}\n              InputLabelProps={{\n                shrink: true\n              }}\n              required\n            // helperText=\"helper text\"\n            />\n          </FormControl>\n        </Grid>\n\n        <Grid item>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.button}\n            size=\"large\"\n            onClick={handleSubmit}\n          >\n            Search\n          </Button>\n        </Grid>\n      </Grid>\n\n      <Grid item className={classes.tableGrid} >\n        {applicableFlights && applicableFlights.length > 0 && (\n          <TableContainer component={Paper}>\n            <Table className={classes.table} aria-label=\"simple table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell><strong>Onward Flight</strong></TableCell>\n                  <TableCell align=\"right\"><strong>Dep Airport</strong></TableCell>\n                  <TableCell align=\"right\"><strong>Arrival Airport</strong></TableCell>\n                  <TableCell align=\"right\"><strong>Dep Time</strong></TableCell>\n                  <TableCell align=\"right\"><strong>Arr Time</strong></TableCell>\n                  <TableCell align=\"right\"><strong>Connecting Flight</strong></TableCell>\n                  <TableCell align=\"right\"><strong>Dep Airport</strong></TableCell>\n                  <TableCell align=\"right\"><strong>Arrival Airport</strong></TableCell>\n                  <TableCell align=\"right\"><strong>Dep Time</strong></TableCell>\n                  <TableCell align=\"right\"><strong>Arr Time</strong></TableCell>\n                </TableRow>\n              </TableHead>\n\n              <TableBody>\n                {applicableFlights.map((row, index) => (\n                  <TableRow key={index} onClick={() => handleRowClick(row)}>\n                    <TableCell component=\"th\" scope=\"row\" >\n                      {row.onwardFltNo}\n                    </TableCell>\n                    <TableCell align=\"right\">{row.onwardDepArpt}</TableCell>\n                    <TableCell align=\"right\">{row.onwardArrArpt}</TableCell>\n                    <TableCell align=\"right\">{row.onwardDepTime}</TableCell>\n                    <TableCell align=\"right\">{row.onwardArrTime}</TableCell>\n                    <TableCell align=\"right\">{row.connFltNo}</TableCell>\n                    <TableCell align=\"right\">{row.connDepArpt}</TableCell>\n                    <TableCell align=\"right\">{row.connArrArpt}</TableCell>\n                    <TableCell align=\"right\">{row.connDepTime}</TableCell>\n                    <TableCell align=\"right\">{row.connArrTime}</TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>)\n        }\n      </Grid>\n      { applicableFlights && applicableFlights.length > 0 && (\n        <Grid item className={classes.tableGrid} >\n          <h1>Google Maps</h1>\n          <MyMapComponent path={mapCordinates} fromAirName={fromAirName} toAirName={toAirName} />\n        </Grid>\n      )}\n    </div>\n  );\n};\nexport default CenteredTabs;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n    backgroundColor: '#1261A0',\n    paddingTop: '10px',\n    paddingBottom: '10px',\n  },\n\n  images: {\n    width: '100%',\n    height: window.innerHeight,\n  },\n\n  about: {\n    width: '100%',\n    height: '600px',\n  },\n});\n\nconst CenteredTabs = () => {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div>\n      <Paper className={classes.root}>\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          //textColor=\"primary\"\n          centered\n        >\n          {/* <Tab label=\"Home\" style={{ color: 'white', fontSize: '16px' }} />\n          <Tab label=\"About\" style={{ color: 'white', fontSize: '16px' }} /> */}\n          <Tab\n            label=\"Search Flights\"\n            href=\"/\"\n            style={{ color: 'white', fontSize: '16px' }}\n          />\n        </Tabs>\n      </Paper>\n\n    </div>\n  );\n};\nexport default CenteredTabs;\n","import './App.css';\nimport React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport SearchFlight from './main/webpage/SearchFlight';\nimport ManageFlights from './main/manageFlights/ManageFlights';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={SearchFlight} />\n          <Route exact path=\"/manageFlights\" component={ManageFlights} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}